<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <client_script><![CDATA[function() {
  /* widget controller */
  var c = this;
}]]></client_script>
        <controller_as>c</controller_as>
        <css>table {
    font-family: arial, sans-serif;
    border-collapse: collapse;
    width: 1200px;
  float: Left;
  margin-left: 0px;
}
.tHead {
  Background-color: #484b82;
  height: 50px;
    color: white;
  text-align: center;
}
th {
Background-color: #E1DDE9;
  text-align: left;
  border-bottom: 3px solid #005c99;
 padding: 8px;

}
td {
    border: 1px solid #dddddd;
    text-align: left;
    padding: 8px;

}
.results tr:nth-child(odd) {
  background: #eff0f2;
}
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>MIT ERR Scores</id>
        <internal>false</internal>
        <link/>
        <name>MIT ERR Scores</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	/* populate the 'data' object */
	/* e.g., data.table = $sp.getValue('table'); */
	var dt = new Date();
	console.log(dt.toString())
	console.log(dt.getFullYear().toString())

	data.entity = [];
	entityObj={};

	var appl = new GlideRecord ('x_depar_err_self_s_application');
	appl.addQuery('cfda_num','027');
	appl.addQuery('sub_prgm_cd','A');
	appl.addQuery('sub_prgm_fy', dt.getFullYear().toString());
	appl.addQuery('applicant_name','!=','BUREAU OF INDIAN EDUCATION')
	appl.orderBy('applicant_state')
	appl.query();
	while (appl.next()){
		entityObj={};
		entityObj.duns = appl.recipient_duns.getDisplayValue();
		entityObj.state = appl.applicant_state.getDisplayValue();


		var entity = new GlideRecord ('x_depar_err_self_s_entity');
		entity.addQuery('duns',entityObj.duns);
		entity.query();
		if (entity.next()) {
			var adminColor = entity.asd_total_sc_cc.getDisplayValue();
			if (adminColor == 'G') {adminColor = 'Low'}
			else
				if (adminColor == 'Y') {adminColor = 'Medium'}
			else
				if (adminColor == 'R') {adminColor = 'High'}

			entityObj.admScore = adminColor +' ('+entity.asd_total_sc.getDisplayValue() + ')';

			var finColor = entity.fsd_total_sc_cc.getDisplayValue();
			if (finColor == 'G') {finColor = 'Low'}
			else
				if (finColor == 'Y') {finColor = 'Medium'}
			else
				if (finColor == 'R') {finColor = 'High'}

			entityObj.finScore = finColor +' ('+entity.fsd_total_sc.getDisplayValue() + ')';

			var intColor = entity.fac_total_sc_cc.getDisplayValue();
			if (intColor == 'G') {intColor = 'Low'}
			else
				if (intColor == 'Y') {intColor = 'Medium'}
			else
				if (intColor == 'R') {intColor = 'High'}


			entityObj.intScore = intColor +' ('+entity.fac_total_sc.getDisplayValue() + ')';
			entityObj.dbKey = entity.dbkey.getDisplayValue();
			console.log('how about here: '+entityObj.dbkey)
		}

		// Grab the Audit info based on DBKEY //
    var label1 = ''; // Opinion on Financial Statements, Current Year//
		var label2 = ''; // Opinion on Financial Statements, previous 4 audits//
		var label3 = ''; // Opinion on Major Programs, Current Year//
		var label4 = ''; // Opinion on Major Programs, previous 4 audits //
		var label5 = ''; // Program Findings, most recent year//
		var label6 = ''; // Program Findings, previous 4 audits //

		var grOpp = new GlideAggregate('x_depar_err_self_s_audit');
		grOpp.addQuery('dbkey',entityObj.dbKey);
		grOpp.query();
		if (grOpp.next()) {

			// grab the values that comprise the current year opinion on financial statements //
			
			var unqual_mr = grOpp.fac_mr_fs_unqualified.getDisplayValue();
			var qual_mr = grOpp.fac_mr_fs_qualified.getDisplayValue();
			var adv_mr = grOpp.fac_mr_fs_adverse.getDisplayValue();
			var dis_mr = grOpp.fac_mr_fs_disclaimed.getDisplayValue();

			if (qual_mr == 'N' && adv_mr == 'N' && dis_mr == 'N') {
				label1 = 'The State of '+ entityObj.state + ' received an unmodified opinion on its Financial Statements for the current audit.  '
			}
			else {
				label1 = 'The State of ' +entityObj.state + ' received modified opinions on its Financial Statements for the current audit '
				if (qual_mr == 'Y') {
					label1 = label1 + '(Qualified';
					if (adv_mr == 'Y') {label1 = label1 + ', Adverse'}
					if (dis_mr == 'Y') {label1 = label1 + ', Disclaimed'}
					label1 = label1 + ').  ';
				}
				else if (adv_mr == 'Y') {
					label1 = label1 + '(Adverse';
					if (qual_mr == 'Y') {label1 = label1 + ', Qualified'}
					if (dis_mr == 'Y') {label1 = label1 + ', Disclaimed'}
					label1 = label1 + ').  ';

				}

				else if (dis_mr == 'Y'){
					label1 = label1 + '(Disclaimed';
					if (adv_mr == 'Y') {label1 = label1 + ', Adverse'}
					if (qual_mr == 'Y') {label1 = label1 + ', Qualified'}
					label1 = label1 + ').  ';
				}
			}
			
			
			// Grab the values for the previous 4yr audit opinions on financial statements
			
		var unqual_4yr = grOpp.fac_4yr_fs_unqualified.getDisplayValue();
		var qual_4yr = grOpp.fac_4yr_fs_qualified.getDisplayValue();
		var adv_4yr = grOpp.fac_4yr_fs_adverse.getDisplayValue();
		var dis_4yr = grOpp.fac_4yr_fs_disclaimed.getDisplayValue();
		
		if (qual_4yr == 'N' && adv_4yr == 'N' && dis_4yr == 'N') {
				label2 = 'It also received an unmodified opinion on its Financial Statements for the past 4 audits.  '
		}
		else {
			label2 = 'It also received modified opinions on its Financial Statements for one or more of the previous 4 audits '
			if (qual_4yr == 'Y') {
				label2 =label2 + ' (Qualified';
			  if (adv_4yr == 'Y') {label2 = label2 + ', Adverse'}
			  if (dis_4yr == 'Y') {label2 = label2 + ', Disclaimed'}
				label2 = label2 + ').  ';
			}
			else if (adv_4yr == 'Y') {
				label2 = label2 +' (Adverse';
			  if (qual_4yr == 'Y') {label2 = label2 + ', Qualified'}
			  if (dis_4yr == 'Y') {label2 = label2 + ', Disclaimed'}
				label2 = label2 + ').  ';
				
			}
			
			else if (dis_4yr == 'Y'){
				label2 = label2 + ' (Disclaimed';
			  if (adv_4yr == 'Y') {label2 = label2 + ', Adverse'}
			  if (qual_4yr == 'Y') {label2 = label2 + ', Qualified'}
				label2 = label2 + ').  ';
			}
		}
		
		
		// Grab the Opinion of ED Major Program Compliance , most recent audit

		
		unqual_mr = grOpp.fac_mr_mp_unqualified.getDisplayValue();
		qual_mr = grOpp.fac_mr_mp_qualified.getDisplayValue();
		adv_mr = grOpp.fac_mr_mp_adverse.getDisplayValue();
		dis_mr = grOpp.fac_mr_mp_disclaimed.getDisplayValue();

		if (qual_mr == 'N' && adv_mr == 'N' && dis_mr == 'N') {
			label3 =  'For its most recent audit, the State received an unmodified opinion on its compliance of Major Programs.  '
		}
		else {
			label3 = 'For its most recent audit, the State received a modified opinion on its compliance of Major Programs '
			if (qual_mr == 'Y') {
				label3 = label3 + ' (Qualified';
			  if (adv_mr == 'Y') {label3 = label3 + ', Adverse'}
			  if (dis_mr == 'Y') {label3 = label3 + ', Disclaimed'}
				label3 = label3 + ').  ';

			}
			else if (adv_mr == 'Y') {
				label3 =label3 + ' (Adverse';
			  if (qual_mr == 'Y') {label3 = label3 + ', Qualified'}
			  if (dis_mr == 'Y') {label3 = label3 + ', Disclaimed'}
				label3 = label3 + ').  ';

			}
			
			else if (dis_mr == 'Y'){
				label3 = label3 + ' (Disclaimed';
			  if (adv_mr == 'Y') {label3 = label3 + ', Adverse'}
			  if (qual_mr == 'Y') {label3 = label3 + ', Qualified'}
				label3 = label3 + ').  ';

			}

		}

		
		// Grab the results of the 4yr Audit, Major Programs
		value4yr = '';
		
		unqual_4yr = grOpp.fac_4yr_mp_unqualified.getDisplayValue();
	  qual_4yr = grOpp.fac_4yr_mp_qualified.getDisplayValue();
		adv_4yr = grOpp.fac_4yr_mp_adverse.getDisplayValue();
		dis_4yr = grOpp.fac_4yr_mp_disclaimed.getDisplayValue();
		
		if (qual_4yr == 'N' && adv_4yr == 'N' && dis_4yr == 'N') {
			label4 =  'The State received an unmodified opinion on its compliance of Major Programs for the previous 4 audits.  '
		}
		else {
			label4 = 'The State received an modified opinions on its compliance of Major Programs for the previous 4 audits  '
			if (qual_4yr == 'Y') {
				label4 = label4 + ' (Qualified';
			  if (adv_4yr == 'Y') {label4 = label4 + ', Adverse'}
			  if (dis_4yr == 'Y') {label4 = label4 + ', Disclaimed'}
				label4 = label4 + ').  ';
			}
			else if (adv_4yr == 'Y') {
				label4 = label4 + ' (Adverse';
			  if (qual_4yr == 'Y') {label4 = label4 + ', Qualified'}
			  if (dis_4yr == 'Y') {label4 = label4 + ', Disclaimed'}
				label4 = label4 + ').  ';
				
			}
			
			else if (dis_4yr == 'Y'){
				label4 = label4 + ' (Disclaimed';
			  if (adv_4yr == 'Y') {label4 = label4 + ', Adverse'}
			  if (qual_4yr == 'Y') {label4 = label4 + ', Qualified'}
				label4 = label4 + ').  ';
			}
		}
			label4 = label4 + '\n';
			label5 = 'Programmatic Findings for the most recent audit were found in the following Compliance Areas: '
			label6 = 'During the Previous 4 audit, Programmatic Findings were found one or more times in the following Compliance Areas: '

		
			// Grab the Program Finding Flags
			
			
			//Allowable Costs
		
		var val = '';
		var countCurr = 0;
		var count4yr = 0;
	  var filler = '';
		var filler4 = '';

		val = grOpp.fac_mr_findings_b_yn.getDisplayValue();
		if (val == 'Y') {
			countCurr = countCurr + 1;
			label5 = label5 + ' Allowable Costs'}
		
		val = grOpp.fac_4yr_yrcount_b_yn.getDisplayValue();
		if (val == 'Y'){
			count4yr = count4yr + 1;
			label6 = label6 + 'Allowable Costs'}

		
		//Allowable Activities

		val = grOpp.fac_mr_findings_a_yn.getDisplayValue();
		if (val == 'Y') {
		countCurr = countCurr + 1;
		if (countCurr > 1) {filler = ', '}
		label5 = label5 + filler + ' Allowable Activities'}
		
		val = grOpp.fac_4yr_yrcount_a_yn.getDisplayValue();
		if (val == 'Y') {
		count4yr = count4yr + 1;
		if (count4yr > 1) {filler4 = ', '}
		label6 = label6 + filler4 + ' Allowable Activities'}

		//Cash Management
		
	
		val = grOpp.fac_mr_findings_c_yn.getDisplayValue();
		if (val == 'Y') {
		countCurr = countCurr + 1;
		if (countCurr > 1) {filler = ', '}
		label5 = label5 + filler + ' Cash Management'}
	
		val = grOpp.fac_4yr_yrcount_c_yn.getDisplayValue();
		if (val == 'Y') {
		count4yr = count4yr + 1;
		if (count4yr > 1) {filler4 = ', '}
		label6 = label6 + filler4 + ' Cash Management'}
		
		
		//Eligibility
		

		val = grOpp.fac_mr_findings_e_yn.getDisplayValue();
		if (val == 'Y') {
		countCurr = countCurr + 1;
		if (countCurr > 1) {filler = ', '}
		label5 = label5 + filler + ' Eligibility'}
	
		
		val = grOpp.fac_4yr_yrcount_e_yn.getDisplayValue();
		if (val == 'Y') {
		count4yr = count4yr + 1;
		if (count4yr > 1) {filler4 = ', '}
		label6 = label6 + filler4 + ' Eligibility'}
	
		
		//	Matching, Level of Effort, Earmarking
		

		val = grOpp.fac_mr_findings_g_yn.getDisplayValue();
		if (val == 'Y') {
		countCurr = countCurr + 1;
		if (countCurr > 1) {filler = ', '}
		label5 = label5 + filler + ' Matching/Level of Effort/Earmarking'}
	
		val = grOpp.fac_4yr_yrcount_g_yn.getDisplayValue();
		if (val == 'Y') {
		count4yr = count4yr + 1;
		if (count4yr > 1) {filler4 = ', '}
		label6 = label6 + filler4 + ' Matching/Level of Effort/Earmarking'}
	
	
//	Procurement / Suspension and Debarment
		

		val = grOpp.fac_mr_findings_i_yn.getDisplayValue();
		if (val == 'Y') {
		countCurr = countCurr + 1;
		if (countCurr > 1) {filler = ', '}
		label5 = label5 + filler + ' Procurement/Suspension and Debarment'}
	
		
		val = grOpp.fac_4yr_yrcount_i_yn.getDisplayValue();
		if (val == 'Y') {
		count4yr = count4yr + 1;
		if (count4yr > 1) {filler4 = ', '}
		label6 = label6 + filler4 + ' Procurement/Suspension and Debarment'}
		
		
		//	Equipment and Real Property Management
		

		val = grOpp.fac_mr_findings_f_yn.getDisplayValue();
		if (val == 'Y') {
		countCurr = countCurr + 1;
		if (countCurr > 1) {filler = ', '}
		label5 = label5 + filler + ' Equipment and Real Property Management'}
	
		val = grOpp.fac_4yr_yrcount_f_yn.getDisplayValue();
		if (val == 'Y') {
		count4yr = count4yr + 1;
		if (count4yr > 1) {filler4 = ', '}
		label6 = label6 + filler4 + ' Equipment and Real Property Management'}
		
		
		//	Period of Availability of Federal Funds
		
	
		val = grOpp.fac_mr_findings_h_yn.getDisplayValue();
		if (val == 'Y') {
		countCurr = countCurr + 1;
		if (countCurr > 1) {filler = ', '}
		label5 = label5 + filler + ' Period of Availability'}
	
		val = grOpp.fac_4yr_yrcount_h_yn.getDisplayValue();
		if (val == 'Y') {
		count4yr = count4yr + 1;
		if (count4yr > 1) {filler4 = ', '}
		label6 = label6 + filler4 + ' Period of Availability'}
		
		
			//	Program Income
		
		val = grOpp.fac_mr_findings_j_yn.getDisplayValue();
    if (val == 'Y') {
		countCurr = countCurr + 1;
		if (countCurr > 1) {filler = ', '}
		label5 = label5 + filler + ' Program Income'}
			
		val = grOpp.fac_4yr_yrcount_j_yn.getDisplayValue();
		if (val == 'Y') {
		count4yr = count4yr + 1;
		if (count4yr > 1) {filler4 = ', '}
		label6 = label6 + filler4 + ' Program Income'}

		
				//	Reporting

		val = grOpp.fac_mr_findings_l_yn.getDisplayValue();
		if (val == 'Y') {
		countCurr = countCurr + 1;
		if (countCurr > 1) {filler = ', '}
		label5 = label5 + filler + ' Reporting'}
	
		val = grOpp.fac_4yr_yrcount_l_yn.getDisplayValue();
		if (val == 'Y') {
		count4yr = count4yr + 1;
		if (count4yr > 1) {filler4 = ', '}
		label6 = label6 + filler4 + ' Reporting'}

				
					//	Special Tests and Provisions
		
		val = grOpp.fac_mr_findings_n_yn.getDisplayValue();
		if (val == 'Y') {
		countCurr = countCurr + 1;
		if (countCurr > 1) {filler = ', '}
		label5 = label5 + filler + ' Special Tests and Provisions'}
	
		
		val = grOpp.fac_4yr_yrcount_n_yn.getDisplayValue();
		if (val == 'Y') {
		count4yr = count4yr + 1;
		if (count4yr > 1) {filler4 = ', '}
		label6 = label6 + filler4 + ' Special Tests and Provisions'}
		
		
							//	Subrecipient Monitoring
		
		val = grOpp.fac_mr_findings_m_yn.getDisplayValue();
		if (val == 'Y') {
		countCurr = countCurr + 1;
		if (countCurr > 1) {filler = ', '}
		label5 = label5 + filler + ' Subrecipient Monitoring'}
	
		val = grOpp.fac_4yr_yrcount_m_yn.getDisplayValue();
		if (val == 'Y') {
		count4yr = count4yr + 1;
		if (count4yr > 1) {filler4 = ', '}
		label6 = label6 + filler4 + ' Subrecipient Monitoring'}
	
		
						//	Davis-Bacon Act  - NEED TO SHOW MOST RECENT COUNT IF "y"
		
		val = grOpp.fac_mr_findings_d_yn.getDisplayValue();
		if (val == 'Y') {
		countCurr = countCurr + 1;
		if (countCurr > 1) {filler = ', '}
		label5 = label5 + filler + ' Davis-Bacon Act'}

		value4yr = grOpp.fac_4yr_yrcount_d_yn.getDisplayValue();
		if (val == 'Y') {
		count4yr = count4yr + 1;
		if (count4yr > 1) {filler4 = ', '}
		label6 = label6 + filler4 + ' Davis-Bacon Act'}
	
		
						//	Real Property Acquisition and Relocation Assistance
		
		val = grOpp.fac_mr_findings_k_yn.getDisplayValue();
		if (val == 'Y') {
		countCurr = countCurr + 1;
		if (countCurr > 1) {filler = ', '}
		label5 = label5 + filler + ' Real Property Acquisition and Relocation Assistance'}
	
		value4yr = grOpp.fac_4yr_yrcount_k_yn.getDisplayValue();
		if (val == 'Y') {
		count4yr = count4yr + 1;
		if (count4yr > 1) {filler4 = ', '}
		label6 = label6 + filler4 + ' Real Property Acquisition and Relocation Assistance'}
	
							//	Other
		
	  val = grOpp.fac_mr_findings_p_yn.getDisplayValue();
		if (val == 'Y') {
		countCurr = countCurr + 1;
		if (countCurr > 1) {filler = ', '}
		label5 = label5 + filler + ' Other'}
	
		
		val = grOpp.fac_4yr_yrcount_p_yn.getDisplayValue();
		if (val == 'Y') {
		count4yr = count4yr + 1;
		if (count4yr > 1) {filler4 = ', '}
		label6 = label6 + filler4 + ' Other'}
			
		label5 = label5 + '.  '
		label6 = label6 + '.'
		if (countCurr == 0) {label5 = ' There were no Programmatic Findings found during the most recent audit.  '}
		if (count4yr == 0) {label5 = ' During the previous 4 Audits, there were no Programmatic Findings.  '}
		}
		
		
	
		entityObj.auditInfo = label1 + label2 + label3 + label4 + label5 + label6

		//entityObj.auditInfo = 'the state of '+entityObj.state+' received '+ oppLabel1
		data.entity.push(entityObj);
	}

})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>paul.bassett</sys_created_by>
        <sys_created_on>2018-06-20 15:26:54</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>867bbe71db325f00664cfd0d0f961912</sys_id>
        <sys_mod_count>68</sys_mod_count>
        <sys_name>MIT ERR Scores</sys_name>
        <sys_package display_value="MIT" source="x_depar_mit">4d538a5cdb9e9300622d7e560f961919</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="MIT">4d538a5cdb9e9300622d7e560f961919</sys_scope>
        <sys_update_name>sp_widget_867bbe71db325f00664cfd0d0f961912</sys_update_name>
        <sys_updated_by>paul.bassett</sys_updated_by>
        <sys_updated_on>2018-06-26 18:29:27</sys_updated_on>
        <template><![CDATA[<div>
  <table class="table-striped">
    <thead class = "thead">
      <tr>
        <th>State</th>
        <th>DUNS</th>
        <th>Admin Risk Score</th>
        <th>Internal Risk Score</th>
        <th>Financial Risk Score</th>
        <th>Audit Analysis</th>
      </tr>
    </thead>
    <tbody class="results">
      <tr text-angular ng-repeat="entity in data.entity">
        <td>  {{entity.state}} </td>
        <td>  {{entity.duns}} </td>
        <td>  {{entity.admScore}} </td>
        <td>  {{entity.finScore}} </td>
        <td>  {{entity.intScore}} </td>
        <td>  {{entity.auditInfo}} </td>
      </tr>
    </tbody>
  </table>       
</div>]]></template>
    </sp_widget>
</record_update>
